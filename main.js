(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{$:()=>J,QR:()=>M,UT:()=>N,vq:()=>w,oe:()=>T,Kn:()=>G,f:()=>O});var t=document.querySelector(".add-btn"),n=document.querySelector(".template-task"),o=document.querySelector(".tasks-list"),c=document.querySelector(".groups-list"),r=document.querySelector(".desc-dialog"),l=document.querySelector(".new-group-btn"),a=document.querySelector(".group-dialog"),u=document.querySelector("#group-input"),i=document.querySelector(".task-dialog"),d=document.querySelector("#select-group"),s=document.querySelector("#title-input"),g=document.querySelector("#date-input"),f=document.querySelector("#desc-input"),h=document.querySelector("#create-task-btn"),m=document.querySelector(".error-dialog"),p=!1;function v(e){for(;null!=o.lastChild&&o.lastChild!==n;)o.removeChild(o.lastChild);e.forEach((function(e){e.getGroup()===T()&&function(e){var t=n.cloneNode(!0);t.classList.remove("template-task"),t.querySelector(".title").textContent=e.getTitle(),t.querySelector(".date").textContent=e.getDueDate();var c=t.querySelector(".checked");c.checked=e.isChecked(),c.addEventListener("click",(function(){e.setChecked(c.checked)})),t.querySelector(".remove-btn").addEventListener("click",(function(){w(e)})),t.querySelector(".expand-btn").addEventListener("mouseup",(function(t){if(!p){var n=t.clientX,o=t.clientY;r.style="top: ".concat(o,"px; left: calc(").concat(n,"px);"),r.querySelector("p").textContent=e.getDescription(),r.show(),p=!0}})),o.appendChild(t)}(e)}))}function S(){for(;null!=d.firstChild;)d.removeChild(d.firstChild);O().forEach((function(e){var t=document.createElement("option");t.textContent=e,d.append(t)}))}function y(){for(;null!=c.firstChild;)c.removeChild(c.firstChild);for(var e=function(e){var t=document.createElement("div");t.classList.add("clickable"),t.textContent=O()[e],t.addEventListener("click",(function(){!function(e){M(e),q()}(e)})),c.appendChild(t)},t=0;t<O().length;t++)e(t);q()}function q(){for(var e=0;e<c.childElementCount;e++)c.childNodes[e].classList.remove("selected");c.childNodes[G()].classList.add("selected")}t.addEventListener("click",(function(){S(),i.showModal()})),l.addEventListener("click",(function(){a.showModal()})),i.querySelector(".cancel").addEventListener("click",(function(){i.close()})),a.querySelector(".add").addEventListener("click",(function(){J(u.value)&&(S(),a.close())})),a.querySelector(".cancel").addEventListener("click",(function(){a.close()})),h.addEventListener("click",(function(){var e,t,n;e=d.value,t=s.value,n=g.value,N(t,f.value,n,e)&&i.close()})),document.body.addEventListener("mousedown",(function(){p&&(r.close(),p=!1)})),m.querySelector("button").addEventListener("click",(function(){m.close()}));var k="No issue was found in the input";function C(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return e.length<n?(E("the minimum input length is ".concat(n),t),!1):null!=o&&e.length>o?(E("the maximum input length is ".concat(o),t),!1):(console.log(k+", "+t),!0)}function E(e){var t,n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";console.log("".concat(e,', "').concat(o,'"')),t=o,n=e,m.querySelector(".header").textContent=t,m.querySelector("p").textContent=n,m.showModal()}var L=[],I=["daily"],x=Number(),b="groupsarr";function D(e,t,n,o){var c=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return{getTitle:function(){return e},getDescription:function(){return t},getDueDate:function(){return n},getGroup:function(){return o},isChecked:function(){return c},setChecked:function(e){c=e,P()}}}function N(e,t,n,o){if(!C(e,"Task Title",1,20)||!C(n,"dueDate",1))return!1;var c=D(e,t,n,o);return L.push(c),v(L),P(),!0}function w(e){var t=L.indexOf(e);L.splice(t,1),P(),v(L)}function O(){return I}function T(){return I[x]}function G(){return x}function J(e){return!!function(e){if(""===e)return E("Please enter group name!"),!1;for(var t=O(),n=0;n<t.length;n++)if(e===t[n])return E("Group already exist!"),!1;return console.log(k+", Group"),!0}(e)&&(I.push(e),y(),P(),!0)}function M(e){x=e,v(L)}function P(){for(var e=0;e<L.length;e++)localStorage.setItem("title".concat(e),L[e].getTitle()),localStorage.setItem("desc".concat(e),L[e].getDescription()),localStorage.setItem("date".concat(e),L[e].getDueDate()),localStorage.setItem("group".concat(e),L[e].getGroup()),localStorage.setItem("checked".concat(e),JSON.parse(L[e].isChecked()));localStorage.setItem("arraylength",L.length),localStorage.setItem(b,JSON.stringify(I))}localStorage.length>0&&(function(){for(var e=localStorage.getItem("arraylength"),t=0;t<e;t++){var n=D(localStorage.getItem("title".concat(t)),localStorage.getItem("desc".concat(t)),localStorage.getItem("date".concat(t)),localStorage.getItem("group".concat(t)),JSON.parse(localStorage.getItem("checked".concat(t))));L.push(n)}v(L)}(),I=JSON.parse(localStorage.getItem(b))),y()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,